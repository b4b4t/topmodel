{
  "$id": "topmodel.config.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Fichier de config du générateur",
  "required": [
    "app"
  ],
  "properties": {
    "app": {
      "type": "string",
      "description": "Nom de l'application."
    },
    "noWarn": {
      "type": "array",
      "description": "Liste des warnings à ignorer.",
      "items": {
        "type": "string",
        "description": "Code du warning (TMD9XXX) à ignorer ",
        "enum": [
          "TMD9001",
          "TMD9002",
          "TMD9003",
          "TMD9004"
        ]
      }
    },
    "modelRoot": {
      "type": "string",
      "description": "Chemin du dossier racine qui contient tous les fichiers tmd du modèle, qui seront chargés par le générateur (à l'exception du fichier de domaines qui est chargé à part). Si non renseigné, le dossier contenant le fichier de config sera utilisé."
    },
    "lockFileName": {
      "type": "string",
      "description": "Nom du fichier de lock",
      "default": "topmodel.lock"
    },
    "pluralizeTableNames": {
      "type": "boolean",
      "description": "Utilise le nom au pluriel des classes pour générer leur noms de table SQL."
    },
    "useLegacyRoleNames": {
      "type": "boolean",
      "description": "Transforme les noms de rôles d'associations en upper case (au lieu de constant case) pour déterminer le nom SQL des propriétés",
      "default": "false"
    },
    "useLegacyAssociationCompositionMappers": {
      "type": "boolean",
      "description": "Permet de mapper les compositions OneToMany et ManyToMany à des compositions avec un kind non null. Sans garantie de résultat...",
      "default": false
    },
    "i18n": {
      "type": "object",
      "description": "Configuration de la localisation de l'application.",
      "additionalProperties": false,
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Template du chemin des dossiers de traductions entrants. Doit contenir le template {lang}",
          "default": "{lang}"
        },
        "defaultLang": {
          "type": "string",
          "description": "Langue par défaut de l'application."
        },
        "langs": {
          "type": "array",
          "description": "Liste des langues de l'application (autre que la langue par défaut).",
          "items": {
            "type": "string",
            "description": "Code du langage"
          }
        },
        "translateReferences": {
          "type": "boolean",
          "description": "Si les libellés des listes de références doivent être traduits.",
          "default": "true"
        },
        "translateProperties": {
          "type": "boolean",
          "description": "Si les libellés des propriétés doivent être traduits.",
          "default": "true"
        }
      }
    },
    "generators": {
      "type": "array",
      "description": "Chemins vers des projets C# contenant des générateurs personnalisés",
      "items": {
        "type": "string"
      }
    },
    "jpa": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de Jpa.",
        "additionalProperties": false,
        "required": [
          "tags",
          "outputDirectory"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'java'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JpaModelGen",
                "JpaInterfaceGen",
                "JpaMapperGenerator",
                "JpaDaoGen",
                "JpaEnumGenerator",
                "JpaResourceGen",
                "SpringApiServerGen",
                "SpringApiClientGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les libellés des listes de références doivent être traduits.",
            "default": "true"
          },
          "translateProperties": {
            "type": "boolean",
            "description": "Si les libellés des propriétés doivent être traduits.",
            "default": "true"
          },
          "ignoreDefaultValues": {
            "type": "boolean",
            "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
          },
          "entitiesPath": {
            "type": "string",
            "description": "Localisation des classes persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/entities/{module}'."
          },
          "daosPath": {
            "type": "string",
            "description": "Localisation des DAOs, relative au répertoire de génération."
          },
          "dtosPath": {
            "type": "string",
            "description": "Localisation des classes non persistées du modèle, relative au répertoire de génération. Par défaut, 'javagen:{app}/dtos/{module}'."
          },
          "enumsPath": {
            "type": "string",
            "description": "Localisation des enums du modèle, relative au répertoire de génération.",
            "default": "javagen:{app}/enums/{module}"
          },
          "apiPath": {
            "type": "string",
            "description": "Localisation du l'API générée (client ou serveur), relative au répertoire de génération. Par défaut, 'javagen:{app}/api/{module}'.",
            "default": "javagen:{app}/api/{module}"
          },
          "compositionConverterCanonicalName": {
            "type": "string",
            "description": "Nom complet de la classe permettant de convertir les compositions stockées en json dans la bdd. Supporte le template {package} et {class}",
            "default": "{package}.{class}Converter"
          },
          "apiGeneration": {
            "oneOf": [
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "enum": [
                  "Client",
                  "Server"
                ]
              },
              {
                "type": "string",
                "description": "Mode de génération de l'API ('Client' ou 'Server')",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "clientApiGeneration": {
            "oneOf": [
              {
                "type": "string",
                "description": "Mode de génération de l'API Client ('Client' ou 'Server')",
                "default": "RestClient",
                "enum": [
                  "RestTemplate",
                  "RestClient"
                ]
              },
              {
                "type": "string",
                "description": "Mode de génération de l'API ('RestTemplate' ou 'RestClient')",
                "default": "RestClient",
                "pattern": "^\\{[^\\}]+\\}$"
              }
            ]
          },
          "resourcesPath": {
            "type": "string",
            "description": "Localisation des ressources, relative au répertoire de génération."
          },
          "resourcesEncoding": {
            "type": "string",
            "description": "Encodage des fichiers de resource.",
            "default": "Latin1",
            "enum": [
              "Latin1",
              "UTF8"
            ]
          },
          "useJdbc": {
            "type": "boolean",
            "description": "Générer les entités en mode JDBC",
            "default": "false"
          },
          "daosAbstract": {
            "type": "boolean",
            "description": " Génération d'interface Abstract avec @NoRepositoryBean permettant de mettre à jour le code généré",
            "default": "false"
          },
          "daosInterface": {
            "type": "string",
            "description": "Précise l'interface des Daos générés.",
            "default": "false"
          },
          "mappersInClass": {
            "type": "boolean",
            "description": "Indique s'il faut ajouter les mappers en tant méthode ou constructeur dans les classes qui les déclarent"
          },
          "dataFlowsPath": {
            "type": "string",
            "description": "Localisation des flux de données générés."
          },
          "dataFlowsBulkSize": {
            "type": "number",
            "description": "Taille des chunks à extraire et insérer"
          },
          "dataFlowsListeners": {
            "type": "array",
            "description": "Listeners à ajouter à tous les dataflows",
            "items": {
              "type": "string",
              "description": "Listener à ajouter à tous les dataflows"
            }
          },
          "dbSchema": {
            "type": "string",
            "description": "Nom du schéma sur lequel les entités sont sauvegardées"
          },
          "associationAdders": {
            "type": "boolean",
            "description": "Option pour générer des méthodes d'ajouts pour les associations oneToMany et manyToMany. Ces méthodes permettent de synchroniser les objets ajoutés",
            "default": "false"
          },
          "associationRemovers": {
            "type": "boolean",
            "description": "Option pour générer des méthodes de suppression pour les associations oneToMany et manyToMany. Ces méthodes permettent de synchroniser les objets supprimés",
            "default": "false"
          },
          "generatedHint": {
            "type": "boolean",
            "description": "Option pour générer l'annotation @Generated('TopModel : https://github.com/klee-contrib/topmodel')",
            "default": "true"
          },
          "fieldsEnum": {
            "type": "string",
            "description": "Option pour générer une enum des champs des classes persistées",
            "default": "None",
            "enum": [
              "None",
              "Persisted",
              "Dto",
              "Persisted_Dto"
            ]
          },
          "fieldsEnumInterface": {
            "type": "string",
            "description": "Précise l'interface des fields enum générés."
          },
          "persistenceMode": {
            "type": "string",
            "description": "Mode de génération de la persistence ('Javax' ou 'Jakarta')",
            "enum": [
              "javax",
              "jakarta"
            ]
          },
          "identity": {
            "type": "object",
            "description": "Options de génération de la séquence",
            "properties": {
              "mode": {
                "type": "string",
                "description": "Mode de génération des séquences.",
                "enum": [
                  "none",
                  "sequence",
                  "identity"
                ],
                "default": "identity"
              },
              "increment": {
                "type": "number",
                "description": "Incrément de la séquence générée."
              },
              "start": {
                "type": "number",
                "description": "Début de la séquence générée."
              }
            }
          }
        }
      }
    }
  },
  "additionalProperties": false
}